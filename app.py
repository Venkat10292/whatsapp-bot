from flask import Flask, request
from twilio.twiml.messaging_response import MessagingResponse
import pandas as pd
from difflib import get_close_matches
import yfinance as yf

app = Flask(__name__)

# Load stock data
df = pd.read_csv("nse_stocks.csv")
df.columns = df.columns.str.strip().str.upper()
symbol_to_name = dict(zip(df["SYMBOL"].str.strip().str.upper(), df["NAME OF COMPANY"].str.strip()))
name_to_symbol = dict(zip(df["NAME OF COMPANY"].str.strip().str.lower(), df["SYMBOL"].str.strip().str.upper()))

# Track user session states
user_state = {}

@app.route("/incoming", methods=["POST"])
def whatsapp_bot():
    sender = request.form.get("From")
    user_msg = request.form.get("Body", "").strip()
    response = MessagingResponse()
    reply = response.message()

    state = user_state.get(sender, "initial")

    # Initial greeting
    if user_msg.lower() in ["hi", "hello"] and state == "initial":
        reply.body(
            "üëã G. Satish ‡∞ö‡∞æ‡∞ü‡±ç‚Äå‡∞¨‡∞æ‡∞ü‡±ç‚Äå‡∞ï‡∞ø ‡∞∏‡±ç‡∞µ‡∞æ‡∞ó‡∞§‡∞Ç!\n"
            "‡∞à ‡∞∞‡±ã‡∞ú‡±Å ‡∞®‡±á‡∞®‡±Å ‡∞Æ‡±Ä‡∞ï‡±Å ‡∞é‡∞≤‡∞æ ‡∞∏‡∞π‡∞æ‡∞Ø‡∞™‡∞°‡∞ó‡∞≤‡∞®‡±Å?\n\n"
            "1Ô∏è‚É£ ‡∞∏‡±ç‡∞ü‡∞æ‡∞ï‡±ç ‡∞µ‡∞ø‡∞∂‡±ç‡∞≤‡±á‡∞∑‡∞£ üìà\n"
            "2Ô∏è‚É£ ‡∞ï‡±ä‡∞®‡±Å‡∞ó‡±ã‡∞≤‡±Å/‡∞Ö‡∞Æ‡±ç‡∞Æ‡∞ï‡∞Ç ‡∞∏‡∞Æ‡∞∏‡±ç‡∞Ø‡∞≤‡±Å ‚öôÔ∏è\n\n"
            "‡∞¶‡∞Ø‡∞ö‡±á‡∞∏‡∞ø 1 ‡∞≤‡±á‡∞¶‡∞æ 2 ‡∞Ö‡∞®‡∞ø ‡∞∞‡∞ø‡∞™‡±ç‡∞≤‡±à ‡∞á‡∞µ‡±ç‡∞µ‡∞Ç‡∞°‡∞ø."
        )
        user_state[sender] = "menu"
        return str(response)

    # Handle menu choice
    if state == "menu":
        if user_msg == "1":
            reply.body("‚úÖ You've selected *Stock Analysis*.\nPlease enter the stock name or symbol.")
            user_state[sender] = "awaiting_stock"
        elif user_msg == "2":
            reply.body("üîß This feature is currently under maintenance.")
            user_state[sender] = "initial"
        else:
            reply.body("‚ùó Invalid option. Please reply with 1 or 2.")
        return str(response)

    # Handle stock analysis
    if state == "awaiting_stock":
        symbol = None
        company_name = None

        if user_msg.upper() in symbol_to_name:
            symbol = user_msg.upper()
            company_name = symbol_to_name[symbol]
        else:
            matches = get_close_matches(user_msg.lower(), name_to_symbol.keys(), n=1, cutoff=0.6)
            if matches:
                matched_name = matches[0]
                symbol = name_to_symbol[matched_name]
                company_name = matched_name.upper()

        if symbol and company_name:
            try:
                stock = yf.Ticker(symbol + ".NS")
                price = stock.info.get("regularMarketPrice", None)
                if price:
                    reply.body(f"üìä {company_name} ({symbol}): ‚Çπ{price}")
                else:
                    reply.body(f"‚ÑπÔ∏è Found {company_name} ({symbol}) but price is unavailable.")
            except Exception as e:
                reply.body("‚ö†Ô∏è Error fetching stock price.")
        else:
            reply.body("‚ùå Could not find the stock. Please try again.")

        user_state[sender] = "initial"
        return str(response)

    # Default fallback
    reply.body("‚ö†Ô∏è Please type 'Hi' to begin.")
    return str(response)

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000)
